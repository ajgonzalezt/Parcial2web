{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Documents/mixtis/Parcial2web/src/Components/cards.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Card, Container, Row, Image } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport home from \"../assets/home.jpeg\";\nimport Rooms from \"./Room\";\nimport apto from \"../assets/Edificio.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardsComponent() {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  let url = \"https://gist.githubusercontent.com/josejbocanegra/0067d2b28b009140fee423cfc84e40e6/raw/6e6b11160fbcacb56621b6422684d615dc3a0d33/spaces.json\";\n  const isSelectedPlaceNull = selectedPlace === null;\n  useEffect(() => {\n    if (!navigator.onLine) {\n      if (localStorage.getItem(\"places\") === null) {\n        setPlaces([]);\n      } else {\n        setPlaces(JSON.parse(localStorage.getItem(\"places\")));\n      }\n    } else {\n      fetch(url).then(resp => resp.json()).then(jsonData => {\n        setPlaces(jsonData);\n        localStorage.setItem(\"places\", JSON.stringify(jsonData));\n      }).catch(error => console.error(error));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: places.map(element => InfoCartas(element, setSelectedPlace))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), !isSelectedPlaceNull && /*#__PURE__*/_jsxDEV(Rooms, {\n      selectedPlace: selectedPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardsComponent, \"nEG4MctPfW33DLOGzI/qbI80ta8=\");\n\n_c = CardsComponent;\n\nfunction InfoCartas(place, setSelectedPlace) {\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"col-mb-2\",\n    md: \"2\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      onClick: () => {\n        setSelectedPlace(place);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"card-img-top\",\n          src: place.type === \"house\" ? home : apto,\n          alt: \"Card image cap\",\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [place.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: place.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, `space ${place.name}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = InfoCartas;\nexport default CardsComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardsComponent\");\n$RefreshReg$(_c2, \"InfoCartas\");","map":{"version":3,"sources":["/Users/andresgonzalez/Documents/mixtis/Parcial2web/src/Components/cards.js"],"names":["Col","Card","Container","Row","Image","React","useEffect","useState","home","Rooms","apto","CardsComponent","places","setPlaces","selectedPlace","setSelectedPlace","url","isSelectedPlaceNull","navigator","onLine","localStorage","getItem","JSON","parse","fetch","then","resp","json","jsonData","setItem","stringify","catch","error","console","map","element","InfoCartas","place","type","name","address"],"mappings":"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","sourcesContent":["import {Col,Card, Container, Row,Image} from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport home from \"../assets/home.jpeg\";\nimport Rooms from \"./Room\"\nimport apto from \"../assets/Edificio.jpeg\";\n\nfunction CardsComponent() {\n    const [places, setPlaces] = useState([]);\n    const [selectedPlace, setSelectedPlace] = useState(null);\n\n    let url = \"https://gist.githubusercontent.com/josejbocanegra/0067d2b28b009140fee423cfc84e40e6/raw/6e6b11160fbcacb56621b6422684d615dc3a0d33/spaces.json\";\n  \n    const isSelectedPlaceNull = selectedPlace === null;\n\n    useEffect(() => {\n       if (!navigator.onLine) {\n          if (localStorage.getItem(\"places\") === null) {\n        setPlaces([]);\n      } else {\n           setPlaces(JSON.parse(localStorage.getItem(\"places\")));\n      }\n    } else {\n    \n      fetch(url)\n        .then((resp) => resp.json())\n        .then((jsonData) => {\n          setPlaces(jsonData);\n          localStorage.setItem(\"places\", JSON.stringify(jsonData));\n        })\n        .catch((error) => console.error(error));\n    }}, []);\n\n     return (\n        \n         \n    <div>   \n    <Container>\n        <Row >\n\n             \n\n         {places.map((element) => InfoCartas(element,setSelectedPlace))}\n        \n         </Row>\n         </Container>\n         {!isSelectedPlaceNull && <Rooms selectedPlace={selectedPlace} />}\n\n          </div>\n     \n      );\n\n\n\n\n}\n\n\nfunction InfoCartas(place,setSelectedPlace)\n{\n\n\n    return(\n      <Col className=\"col-mb-2\" key={`space ${place.name}`} md=\"2\">\n        <Card onClick={() => {\n                  setSelectedPlace(place);\n                }}\n              >\n        <div className=\"card\">\n        <Image\n        className=\"card-img-top\"\n        src={place.type === \"house\" ? home : apto}\n        alt=\"Card image cap\"\n        fluid\n      />\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{place.name} </h5>\n            <p className=\"card-text\">{place.address}</p>\n        </div>\n    </div>\n    </Card>\n\n    </Col>\n    );\n\n\n}\n\nexport default CardsComponent;\n\n"]},"metadata":{},"sourceType":"module"}