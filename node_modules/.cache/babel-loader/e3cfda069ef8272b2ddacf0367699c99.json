{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Documents/mixtis/Parcial2web/src/Components/Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Col, Container, Row, Image, Table } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rooms(props) {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  console.log(\"props space\", props.selectedSpace);\n  const urlSpaces = \"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\n  useEffect(() => {\n    let currentRooms = [];\n    console.log(\"props\", props);\n    fetch(urlSpaces).then(resp => resp.json()).then(jsonData => {\n      console.log(\"JSON Data rooms\", jsonData); // eslint-disable-next-line array-callback-return\n\n      jsonData.map((e, i) => {\n        if (e.homeId === props.selectedSpace.id) {\n          currentRooms.push(e);\n        }\n      });\n      setRooms(currentRooms);\n    }).catch(error => console.error(error));\n  }, [props, props.selectedSpace]);\n  console.log(\"Rooms \", rooms);\n  const isSelectedRoomNull = selectedRoom === null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"roomTitle\",\n      style: {\n        textAlign: \"left\",\n        marginLeft: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"7\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: rooms.map((e, i) => /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                onClickCapture: () => {\n                  setSelectedRoom(e);\n                  console.log(\"selectedRoom \", selectedRoom);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"roomTitle\",\n                  children: getRoomName(e.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Image, {\n                  src: getRoomImage(e.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, `room ${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                    id: \"device\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                    id: \"value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [console.log(\"devices \", selectedRoom !== null ? selectedRoom.devices : []), !isSelectedRoomNull && selectedRoom.devices.map((e, i) => /*#__PURE__*/_jsxDEV(Devices, {\n                id: i,\n                device: e\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      rooms: rooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Rooms, \"vuSswNKEUq7OMa8dS6LDOXph0uU=\");\n\n_c = Rooms;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/Users/andresgonzalez/Documents/mixtis/Parcial2web/src/Components/Room.js"],"names":["React","useEffect","useState","Card","Col","Container","Row","Image","Table","FormattedMessage","Rooms","props","rooms","setRooms","selectedRoom","setSelectedRoom","console","log","selectedSpace","urlSpaces","currentRooms","fetch","then","resp","json","jsonData","map","e","i","homeId","id","push","catch","error","isSelectedRoomNull","textAlign","marginLeft","getRoomName","name","getRoomImage","devices"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Col, Container, Row, Image, Table } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\n\nfunction Rooms(props) {\n    const [rooms, setRooms] = useState([]);\n    const [selectedRoom, setSelectedRoom] = useState(null);\n  \n    console.log(\"props space\", props.selectedSpace);\n    const urlSpaces =\n      \"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\n  \n    useEffect(() => {\n      let currentRooms = [];\n      console.log(\"props\", props);\n      fetch(urlSpaces)\n        .then((resp) => resp.json())\n        .then((jsonData) => {\n          console.log(\"JSON Data rooms\", jsonData);\n  \n          // eslint-disable-next-line array-callback-return\n          jsonData.map((e, i) => {\n            if (e.homeId === props.selectedSpace.id) {\n              currentRooms.push(e);\n            }\n          });\n          setRooms(currentRooms);\n        })\n        .catch((error) => console.error(error));\n    }, [props, props.selectedSpace]);\n  \n    console.log(\"Rooms \", rooms);\n  \n    const isSelectedRoomNull = selectedRoom === null;\n  \n    return (\n      <div>\n        <h2\n          className=\"roomTitle\"\n          style={{ textAlign: \"left\", marginLeft: \"2rem\" }}\n        >\n          <FormattedMessage id=\"rooms\" />\n        </h2>\n        <Container>\n          <Row>\n            <Col md=\"7\">\n              <Row>\n                {rooms.map((e, i) => (\n                  <Col md=\"4\" key={`room ${i}`}>\n                    <Card\n                      onClickCapture={() => {\n                        setSelectedRoom(e);\n                        console.log(\"selectedRoom \", selectedRoom);\n                      }}\n                    >\n                      <Card.Title className=\"roomTitle\">\n                        {getRoomName(e.name)}\n                      </Card.Title>\n                      <Image src={getRoomImage(e.name)} />\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n            <Col>\n              <Table striped bordered>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>ID</th>\n                    <th>\n                      <FormattedMessage id=\"device\" />\n                    </th>\n                    <th>\n                      <FormattedMessage id=\"value\" />\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {console.log(\n                    \"devices \",\n                    selectedRoom !== null ? selectedRoom.devices : []\n                  )}\n                  {!isSelectedRoomNull &&\n                    selectedRoom.devices.map((e, i) => (\n                      <Devices id={i} device={e} />\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n        <Stats rooms={rooms} />\n      </div>\n    );\n  }\n  \n  export default Rooms;\n\n"]},"metadata":{},"sourceType":"module"}