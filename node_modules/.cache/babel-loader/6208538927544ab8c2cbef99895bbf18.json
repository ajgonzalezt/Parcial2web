{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Documents/mixtis/Parcial2web/src/Components/Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Col, Container, Row, Image, Table } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\nimport Cama from \"../assets/Cama.png\";\nimport Cocina from \"../assets/Cocina.png\";\nimport Comedor from \"../assets/Comedor.png\";\nimport Sala from \"../assets/Sala.png\";\nimport Devices from \"./Devices\";\nimport Tabla from \"./Tabla\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Room(props) {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const url = \"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\n  useEffect(() => {\n    let currentRooms = [];\n\n    if (!navigator.onLine) {\n      if (localStorage.getItem(\"rooms\") === null) {\n        setRooms([]);\n      } else {\n        let r = JSON.parse(localStorage.getItem(\"rooms\"));\n        r.map(e => {\n          if (e.homeId === props.selectedPlace.id) {\n            currentRooms.push(e);\n          }\n        });\n        setRooms(currentRooms);\n      }\n    } else {\n      fetch(url).then(resp => resp.json()).then(jsonData => {\n        console.log(\"JSON Data\", jsonData);\n        setRooms(jsonData.filter(el => el.homeId === props.selectedPlace.id));\n        localStorage.setItem(\"casa\", JSON.stringify(jsonData));\n      }).catch(error => console.error(error));\n    }\n  }, [props, props.selectedPlace]);\n  const isSelectedRoomNull = selectedRoom === null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"roomTitle\",\n      style: {\n        textAlign: \"left\",\n        marginLeft: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"7\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: rooms.map((e, i) => /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => {\n                  setSelectedRoom(e);\n                  console.log(\"selectedRoom \", selectedRoom);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"roomTitle\",\n                  children: RommName(e.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Image, {\n                  src: Imagen(e.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, `room ${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tabla, {\n          children: [\"selectedRoom= \", selectedRoom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Room, \"vuSswNKEUq7OMa8dS6LDOXph0uU=\");\n\n_c = Room;\n\nfunction Imagen(roomName) {\n  if (roomName === \"Kitchen\") return Cocina;else if (roomName === \"Dinner room\") return Comedor;else if (roomName === \"Living room\") return Sala;else return Cama;\n}\n\n_c2 = Imagen;\n\nfunction RommName(roomName) {\n  if (roomName === \"Kitchen\") return /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"kitchen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 16\n  }, this);else if (roomName === \"Dinner room\") return /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"dinnerRoom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 16\n  }, this);else if (roomName === \"Living room\") return /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"livingRoom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 14\n  }, this);else return /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"bedroom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 14\n  }, this);\n}\n\n_c3 = RommName;\nexport default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Room\");\n$RefreshReg$(_c2, \"Imagen\");\n$RefreshReg$(_c3, \"RommName\");","map":{"version":3,"sources":["/Users/andresgonzalez/Documents/mixtis/Parcial2web/src/Components/Room.js"],"names":["React","useEffect","useState","Card","Col","Container","Row","Image","Table","FormattedMessage","Cama","Cocina","Comedor","Sala","Devices","Tabla","Room","props","rooms","setRooms","selectedRoom","setSelectedRoom","url","currentRooms","navigator","onLine","localStorage","getItem","r","JSON","parse","map","e","homeId","selectedPlace","id","push","fetch","then","resp","json","jsonData","console","log","filter","el","setItem","stringify","catch","error","isSelectedRoomNull","textAlign","marginLeft","i","RommName","name","Imagen","roomName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Col, Container, Row, Image, Table } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\nimport Cama from \"../assets/Cama.png\";\nimport Cocina from \"../assets/Cocina.png\";\nimport Comedor from \"../assets/Comedor.png\";\nimport Sala from \"../assets/Sala.png\";\nimport Devices from \"./Devices\"\nimport Tabla from \"./Tabla\"\n\n\nfunction Room(props) {\n    const [rooms, setRooms] = useState([]);\n    const [selectedRoom, setSelectedRoom] = useState(null);\n\n    const url =\n      \"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\n  \n    useEffect(() => {\n\n      let currentRooms = [];\n  \n      if (!navigator.onLine) {\n        if (localStorage.getItem(\"rooms\") === null) {\n          setRooms([]);\n        } else {\n          let r = JSON.parse(localStorage.getItem(\"rooms\"));\n          r.map((e) => {\n            if (e.homeId === props.selectedPlace.id) {\n              currentRooms.push(e);\n            }\n          });\n  \n          setRooms(currentRooms);\n        }\n      } else {\n        fetch(url)\n        .then((resp) => resp.json())\n        .then((jsonData) => {\n            console.log(\"JSON Data\", jsonData);\n            setRooms(jsonData.filter((el) => el.homeId === props.selectedPlace.id));\n            localStorage.setItem(\"casa\", JSON.stringify(jsonData));\n        })\n        .catch((error) => console.error(error));\n    }}, [props, props.selectedPlace]);\n\n  \n  \n    const isSelectedRoomNull =selectedRoom === null;\n    return (\n      <div>\n        <h2\n          className=\"roomTitle\"\n          style={{ textAlign: \"left\", marginLeft: \"2rem\" }}\n        >\n          <FormattedMessage id=\"rooms\" />\n        </h2>\n        <Container>\n          <Row>\n            <Col md=\"7\">\n              <Row>\n                {rooms.map((e, i) => (\n                  <Col md=\"4\" key={`room ${i}`}>\n                    <Card\n                      onClick={() => {\n                        setSelectedRoom(e);\n                        console.log(\"selectedRoom \", selectedRoom);\n                      }}\n                    >\n                      <Card.Title className=\"roomTitle\">\n                        {RommName(e.name)}\n                      </Card.Title>\n                      <Image src={Imagen(e.name)} />\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n            <Tabla>selectedRoom= {selectedRoom}</Tabla>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\nfunction  Imagen(roomName){\n    \n    if (roomName ===\"Kitchen\")\n      return Cocina;    \n    else if (roomName ===\"Dinner room\")\n      return Comedor;\n    else if (roomName ===\"Living room\")\n      return Sala;\n    else\n      return Cama;\n}\n\nfunction RommName(roomName)\n{\n    if (roomName ===\"Kitchen\")\n        return <FormattedMessage id=\"kitchen\" />; \n    else if (roomName ===\"Dinner room\")\n        return <FormattedMessage id=\"dinnerRoom\" />; \n    else if (roomName ===\"Living room\")\n      return <FormattedMessage id=\"livingRoom\" />; \n    else\n      return <FormattedMessage id=\"bedroom\" />; \n}\n  \nexport default Room;\n\n"]},"metadata":{},"sourceType":"module"}